#
# CloudOs schema
#
# Cloudstead private enterprise number is 46577
# Thus all OIDs start with 1.3.6.1.4.1.46577
# Under this, the subtrees are:
#   .100.x   - attribute types
#   .200.x   - object classes
#
dn: cn=schema
attributeTypes: ( 1.3.6.1.4.1.46577.100.1
  NAME 'ctime'
  DESC 'Token used to verify password reset'
  EQUALITY caseIgnoreIA5Match
  SUBSTR caseIgnoreIA5SubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.2
  NAME 'resetPasswordToken'
  DESC 'Token used to verify password reset'
  EQUALITY caseIgnoreIA5Match
  SUBSTR caseIgnoreIA5SubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.3
  NAME 'resetPasswordTokenCtime'
  DESC 'When was the reset token set'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.4
  NAME 'emailVerificationCode'
  DESC 'Token used to verify email'
  EQUALITY caseIgnoreIA5Match
  SUBSTR caseIgnoreIA5SubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.5
  NAME 'emailVerificationCodeCtime'
  DESC 'When was the email token set'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.6
  NAME 'emailVerified'
  EQUALITY booleanMatch
  DESC 'The email address has been verified'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 )
attributeTypes: ( 1.3.6.1.4.1.46577.100.7
  NAME 'mobilePhoneCountryCode'
  DESC 'Mobile phone country code'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{8} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.8
  NAME 'mobilePhone'
  DESC 'Mobile phone number'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.9
  NAME 'admin'
  EQUALITY booleanMatch
  DESC 'If true, this account is a CloudOs Admin'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 )
attributeTypes: ( 1.3.6.1.4.1.46577.100.10
  NAME 'suspended'
  EQUALITY booleanMatch
  DESC 'If true, this account is suspended in CloudOs'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 )
attributeTypes: ( 1.3.6.1.4.1.46577.100.11
  NAME 'twoFactor'
  EQUALITY booleanMatch
  DESC 'If true, this account is enabled for 2-factor authentication'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7 )
attributeTypes: ( 1.3.6.1.4.1.46577.100.12
  NAME 'twoFactorAuthId'
  DESC 'User token with third-party 2-factor authentication service'
  EQUALITY caseIgnoreIA5Match
  SUBSTR caseIgnoreIA5SubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.13
  NAME 'lastLogin'
  DESC 'Most recent login, formatted as YYYY-MM-DD HH:mm:ss'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{30} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.14
  NAME 'storageQuota'
  DESC 'Storage quota in bytes. Should be larger than mailQuota'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.36{50} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.15
  NAME 'mirror'
  DESC 'Instructs CloudOs to merge the members of the referenced group into this one. The relationship is one-way. A group may pull from multiple mirrors.'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )
attributeTypes: ( 1.3.6.1.4.1.46577.100.16
  NAME 'entryUUID'
  DESC 'The UUID of the object in the CloudOs system.'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{40} )

dn: cn=schema
objectClasses: ( 1.3.6.1.4.1.46577.200.1
  NAME 'cloudosInetOrgPerson'
  DESC 'cloudos Internet Organizational Person'
  SUP top AUXILIARY
  MAY ( entryUUID $
        ctime $
        resetPasswordToken $
        resetPasswordTokenCtime $
        emailVerified $
        emailVerificationCode $
        emailVerificationCodeCtime $
        mobilePhoneCountryCode $
        mobilePhone $
        admin $
        suspended $
        twoFactor $
        twoFactorAuthId $
        lastLogin $
        storageQuota ) )
objectClasses: ( 1.3.6.1.4.1.46577.200.2
  NAME 'cloudosGroupOfUniqueNames'
  DESC 'cloudos group of names'
  SUP top AUXILIARY
  MAY ( entryUUID $
        mirror $
        storageQuota ) )
